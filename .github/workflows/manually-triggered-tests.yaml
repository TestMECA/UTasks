name: ‚öíÔ∏è Testing cypress scripts running on CI ‚öíÔ∏è

on:
    workflow_dispatch:
      inputs:
        TESTING_URL:
          description: 'Choose in which website to run script on it [MAIN , STAGE or DEVELOP]'
          required: true
          default: 'MAIN'

jobs:
  cypress-tests:
    name: üîä Cypress Tests - ${{ matrix.browser }} Browser
    strategy:
      fail-fast: false
      matrix:
        browser: [Chrome , Firefox]
    timeout-minutes: 30
    runs-on: ubuntu-latest
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."

      - name: Check out the repository code
        uses: actions/checkout@v2
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: '14'
          cache: 'yarn'
          cache-dependency-path: yarn.lock

      - name: Installing yarn packages
        run: yarn

      - name: Remove the reports
        run: yarn ci:remove:reports

      - name: Set the project environment to DEVELOP
        if: ${{ contains( github.event.inputs.TESTING_URL , 'DEVELOP' ) }}
        run: yarn firebase use DEV --token ${{ secrets.FIREBASE_TOKEN }}

      - name: Set the project environment to STAGE
        if: ${{ contains( github.event.inputs.TESTING_URL , 'STAGE' ) }}
        run: yarn firebase use STAGE --token ${{ secrets.FIREBASE_TOKEN }}

      - name: Set the project environment to MAIN
        if: ${{ contains( github.event.inputs.TESTING_URL , 'MAIN' ) }}
        run: yarn firebase use MAIN --token ${{ secrets.FIREBASE_TOKEN }}

      - name: Auto generating the firebase configuration
        run: yarn firebase apps:sdkconfig web --token ${{ secrets.FIREBASE_TOKEN }} --json | tail -n +3 |head -n -1 > ./src/utasks-configuration.json


      - run: echo "üñ•Ô∏è The workflow is now ready to start cypress tests the ${{ github.repository }} code in the ${{matrix.browser}} browser."

      - name: üôà UI Tests - On ${{ matrix.browser }}
        id: uiTest
        uses: cypress-io/github-action@v2
        with:
          browser: ${{ matrix.browser }}
          headless: true
          command: yarn ci:cy:run -- --env TESTING_URL=${{github.event.inputs.TESTING_URL || 'MAIN' }}


      - name: üëÄ Generate the testing report
        if: always()
        run: yarn ci:code:test:report

      - name: Publish the reports on GitHub - on success
        uses: actions/upload-artifact@v2
        if: ${{ contains( steps.uiTest.outcome , 'success' ) }}
        with:
          name: Utasks-${{github.event.inputs.TESTING_URL}}-${{ matrix.browser }}-cypress-reports-success-${{ github.sha }}
          path: |
            cypress/reports/mochawsome/**.html

      - name: Publish the reports on GitHub - on failure
        uses: actions/upload-artifact@v2
        if: ${{ failure() && contains( steps.uiTest.outcome , 'failure' ) }}
        with:
          name: Utasks-${{github.event.inputs.TESTING_URL}}-${{ matrix.browser }}-cypress-reports-failure-${{ github.sha }}
          path: |
            cypress/reports/mochawsome/**.html
            cypress/reports/screenshots/**
            cypress/reports/videos/**
            !cypress/reports/.nyc_output
            !cypress/reports/coverage
            !cypress/reports/downloads
