name: Website Deployed

on:
  push:
    branches: [ main, stage, develop ]
  workflow_dispatch:

jobs:
  develop-deployment:
    name: üîä Deploying to developing site
    if: ${{ contains( github.ref , 'develop' ) }}
    timeout-minutes: 10
    runs-on: ubuntu-latest
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."

      - name: Check out the repository code
        uses: actions/checkout@v2
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: '14'
          cache: 'yarn'
          cache-dependency-path: yarn.lock

      - name: Create env file
        run: |
          touch .env
          echo SKIP_PREFLIGHT_CHECK=${{ secrets.UTASKS_SKIP_PREFLIGHT_CHECK }} >> .env
          echo REACT_APP_TITLE=UTesks-develop >> .env
          echo REACT_APP_BUILD_TARGET=${{ secrets.REACT_APP_BUILD_TARGET }} >> .env
          echo REACT_APP_NAME=UTesks-develop >> .env
          echo REACT_APP_VERSION=${{ secrets.UTASKS_REACT_APP_VERSION }} >> .env

      - name: Installing yarn packages
        run: yarn

      - name: Set the project environment
        run: yarn firebase use DEV --token ${{ secrets.FIREBASE_TOKEN }}

      - name: Auto generating the firebase configuration
        run: yarn firebase apps:sdkconfig web --token ${{ secrets.FIREBASE_TOKEN }} --json | tail -n +3 |head -n -1 > ./src/utasks-configuration.json

      - name: Build the app
        run: yarn build

      - run: echo "üñ•Ô∏è The workflow is now ready to deploy the ${{ github.repository }} code"

      - name: Deploying to the development site
        run: yarn firebase deploy --only hosting:utasks-develop --non-interactive --token ${{ secrets.FIREBASE_TOKEN }} -m  "RunID ${{ github.run_id }} Commit SHA ${{ github.sha }}"

  stage-deployment:
    name: üîä Deploying to staging site
    if: ${{ contains( github.ref , 'stage' ) }}
    timeout-minutes: 10
    runs-on: ubuntu-latest
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."

      - name: Check out the repository code
        uses: actions/checkout@v2
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: '14'
          cache: 'yarn'
          cache-dependency-path: yarn.lock

      - name: Create env file
        run: |
          touch .env
          echo SKIP_PREFLIGHT_CHECK=${{ secrets.UTASKS_SKIP_PREFLIGHT_CHECK }} >> .env
          echo REACT_APP_TITLE=UTesks-stage >> .env
          echo REACT_APP_BUILD_TARGET=${{ secrets.REACT_APP_BUILD_TARGET }} >> .env
          echo REACT_APP_NAME=UTesks-stage >> .env
          echo REACT_APP_VERSION=${{ secrets.UTASKS_REACT_APP_VERSION }} >> .env

      - name: Installing yarn packages
        run: yarn

      - name: Set the project environment
        run: yarn firebase use STAGE --token ${{ secrets.FIREBASE_TOKEN }}

      - name: Auto generating the firebase configuration
        run: yarn firebase apps:sdkconfig web --token ${{ secrets.FIREBASE_TOKEN }} --json | tail -n +3 |head -n -1 > ./src/utasks-configuration.json

      - name: Build the app
        run: yarn build

      - run: echo "üñ•Ô∏è The workflow is now ready to deploy the ${{ github.repository }} code"

      - name: Deploying to the development site
        run: yarn firebase deploy --only hosting:utasks-stage --non-interactive --token ${{ secrets.FIREBASE_TOKEN }} -m  "RunID ${{ github.run_id }} Commit SHA ${{ github.sha }}"

  production-deployment:
    name: üîä Deploying to production site
    if: ${{ contains( github.ref , 'main' ) }}
    timeout-minutes: 10
    runs-on: ubuntu-latest
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."

      - name: Check out the repository code
        uses: actions/checkout@v2
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: '14'
          cache: 'yarn'
          cache-dependency-path: yarn.lock

      - name: Create env file
        run: |
          touch .env
          echo SKIP_PREFLIGHT_CHECK=${{ secrets.UTASKS_SKIP_PREFLIGHT_CHECK }} >> .env
          echo REACT_APP_TITLE=UTesks >> .env
          echo REACT_APP_BUILD_TARGET=${{ secrets.REACT_APP_BUILD_TARGET }} >> .env
          echo REACT_APP_NAME=UTesks >> .env
          echo REACT_APP_VERSION=${{ secrets.UTASKS_REACT_APP_VERSION }} >> .env

      - name: Installing yarn packages
        run: yarn

      - name: Set the project environment
        run: yarn firebase use MAIN --token ${{ secrets.FIREBASE_TOKEN }}

      - name: Auto generating the firebase configuration
        run: yarn firebase apps:sdkconfig web --token ${{ secrets.FIREBASE_TOKEN }} --json | tail -n +3 |head -n -1 > ./src/utasks-configuration.json

      - name: Build the app
        run: yarn build

      - run: echo "üñ•Ô∏è The workflow is now ready to deploy the ${{ github.repository }} code"

      - name: Deploying to the development site
        run: yarn firebase deploy --only hosting:utasks-main --non-interactive --token ${{ secrets.FIREBASE_TOKEN }} -m  "RunID ${{ github.run_id }} Commit SHA ${{ github.sha }}"
